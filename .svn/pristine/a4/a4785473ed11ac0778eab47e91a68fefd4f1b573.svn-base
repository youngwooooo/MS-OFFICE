<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- for oracle -->
	<!-- dataSource : 데이터베이스 관련 정보
	url : 데이터베이스 접속 정보
	 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@112.220.114.130:1521/xe" />
		<property name="username" value="TEAM1_202103F" />
		<property name="password" value="java" />
	</bean>
	<!-- sqlSessionFactory : 데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리하는 sqlSession 객체를 만듦 -->
	<!-- sqlmap/**/*.xml : /src/main/resources/sqlmap/서비스별폴더/*.xml을 매퍼 파일로
	     사용한다고 스프링에게 알려줌 
	   sessionFactory 빈(bean) 객체를 생성 시 프로퍼티 값으로 mybatisAlias.xml 파일을 읽어
	   alias로 저장할 VO클래스를 설정함-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
 		<property name="mapperLocations" value="/resources/sqlmap/**/*.xml" />
		<property name="configLocation" value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
	</bean>
	<!-- sqlSessionTemplate : 데이터베이스에 개별적으로 쿼리를 실행시키는 객체
	     이 객체를 소스코드에서 사용하여 쿼리를 실행할 것임.
	  - sqlSessionTemplate는 sqlSessionFactory 객체를 생성자로 받음. 
	  - sqlSessionTemplate 객체는 sqlSession 객체가 가지고 있는 데이터베이스 접속 정보와
	    매퍼 파일의 위치를 알 수 있게 됨
	  -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 파일 업로드 용량 (10MB) -->
		<property name="maxUploadSize" value="10485760" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	
	<!-- 파일 업로드 디렉토리 설정 -->
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg value="Z:\\" />
	</bean>
	
	<!-- mapper interface -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.or.ddit.*.mapper" />
	</bean>
	
	<context:annotation-config></context:annotation-config>
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
</beans>
